apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: aws.xnetworks.platformref.crossplane.io
  labels:
    cloud: aws
spec:
  compositeTypeRef:
    apiVersion: platformref.crossplane.io/v1alpha1
    kind: XNetwork
  patchSets:
    - name: providerConfigAws
      patches:
        - type: FromCompositeFieldPath
          fromFieldPath: spec.providerConfig.aws
          toFieldPath: spec.providerConfigRef.name
    - name: network-id
      patches:
        - type: FromCompositeFieldPath
          fromFieldPath: spec.id
          toFieldPath: metadata.labels[networks.aws.platformref.crossplane.io/network-id]
  resources:
    - name: platformref-vpc
      base:
        apiVersion: ec2.aws.upbound.io/v1beta1
        kind: VPC
        spec:
          forProvider:
            region: eu-central-1
            cidrBlock: 192.168.0.0/16
            enableDnsSupport: true
            enableDnsHostNames: true
            tags:
              Owner: Platform Team
      patches:
        - type: PatchSet
          patchSetName: providerConfigAws
        - type: PatchSet
          patchSetName: network-id
        - fromFieldPath: spec.id
          toFieldPath: spec.forProvider.tags.Name
    - name: gateway
      base:
        apiVersion: ec2.aws.upbound.io/v1beta1
        kind: InternetGateway
        spec:
          forProvider:
            region: eu-central-1
            vpcIdSelector:
              matchControllerRef: true
      patches:
        - type: PatchSet
          patchSetName: providerConfigAws
        - type: PatchSet
          patchSetName: network-id
        - fromFieldPath: spec.id
          toFieldPath: spec.forProvider.tags.Name
    - name: subnet-public-eu-central-1a
      base:
        apiVersion: ec2.aws.upbound.io/v1beta1
        kind: Subnet
        metadata:
          labels:
            zone: eu-central-1a
            access: public
        spec:
          forProvider:
            region: eu-central-1
            mapPublicIpOnLaunch: true
            cidrBlock: 192.168.0.0/18
            vpcIdSelector:
              matchControllerRef: true
            availabilityZone: eu-central-1a
            tags:
              kubernetes.io/role/elb: "1"
      patches:
        - type: PatchSet
          patchSetName: providerConfigAws
        - type: PatchSet
          patchSetName: network-id
        - fromFieldPath: spec.id
          toFieldPath: spec.forProvider.tags.Name
        - type: ToCompositeFieldPath
          fromFieldPath: metadata.annotations[crossplane.io/external-name]
          toFieldPath: status.subnetIds[0]
    - name: subnet-public-eu-central-1b
      base:
        apiVersion: ec2.aws.upbound.io/v1beta1
        kind: Subnet
        metadata:
          labels:
            zone: eu-central-1b
            access: public
        spec:
          forProvider:
            region: eu-central-1
            mapPublicIpOnLaunch: true
            cidrBlock: 192.168.64.0/18
            vpcIdSelector:
              matchControllerRef: true
            availabilityZone: eu-central-1b
            tags:
              kubernetes.io/role/elb: "1"
      patches:
        - type: PatchSet
          patchSetName: providerConfigAws
        - type: PatchSet
          patchSetName: network-id
        - fromFieldPath: spec.id
          toFieldPath: spec.forProvider.tags.Name
        - type: ToCompositeFieldPath
          fromFieldPath: metadata.annotations[crossplane.io/external-name]
          toFieldPath: status.subnetIds[1]
    - name: subnet-private-eu-central-1a
      base:
        apiVersion: ec2.aws.upbound.io/v1beta1
        kind: Subnet
        metadata:
          labels:
            zone: eu-central-1a
            access: private
        spec:
          forProvider:
            region: eu-central-1
            cidrBlock: 192.168.128.0/18
            vpcIdSelector:
              matchControllerRef: true
            availabilityZone: eu-central-1a
            tags:
              shared: ""
              kubernetes.io/role/elb: "1"
      patches:
        - type: PatchSet
          patchSetName: providerConfigAws
        - type: PatchSet
          patchSetName: network-id
        - fromFieldPath: spec.id
          toFieldPath: spec.forProvider.tags.shared
          transforms:
            - type: string
              string:
                fmt: "kubernetes.io/cluster/%s"
        - fromFieldPath: spec.id
          toFieldPath: spec.forProvider.tags.Name
        - type: ToCompositeFieldPath
          fromFieldPath: metadata.annotations[crossplane.io/external-name]
          toFieldPath: status.subnetIds[2]
    - name: subnet-private-eu-central-1b
      base:
        apiVersion: ec2.aws.upbound.io/v1beta1
        kind: Subnet
        metadata:
          labels:
            zone: eu-central-1b
            access: private
        spec:
          forProvider:
            region: eu-central-1
            cidrBlock: 192.168.192.0/18
            vpcIdSelector:
              matchControllerRef: true
            availabilityZone: eu-central-1b
            tags:
              shared: ""
              kubernetes.io/role/elb: "1"
      patches:
        - type: PatchSet
          patchSetName: providerConfigAws
        - type: PatchSet
          patchSetName: network-id
        - fromFieldPath: spec.id
          toFieldPath: spec.forProvider.tags.shared
          transforms:
            - type: string
              string:
                fmt: "kubernetes.io/cluster/%s"
        - fromFieldPath: spec.id
          toFieldPath: spec.forProvider.tags.Name
        - type: ToCompositeFieldPath
          fromFieldPath: metadata.annotations[crossplane.io/external-name]
          toFieldPath: status.subnetIds[3]
    - name: routeTable
      base:
        apiVersion: ec2.aws.upbound.io/v1beta1
        kind: RouteTable
        spec:
          forProvider:
            region: eu-central-1
            vpcIdSelector:
              matchControllerRef: true
      patches:
        - type: PatchSet
          patchSetName: providerConfigAws
        - type: PatchSet
          patchSetName: network-id
        - fromFieldPath: spec.id
          toFieldPath: spec.forProvider.tags.Name
    - name: route
      base:
        apiVersion: ec2.aws.upbound.io/v1beta1
        kind: Route
        spec:
          forProvider:
            region: eu-central-1
            destinationCidrBlock: 0.0.0.0/0
            gatewayIdSelector:
              matchControllerRef: true
            routeTableIdSelector:
              matchControllerRef: true
      patches:
        - type: PatchSet
          patchSetName: providerConfigAws
        - type: PatchSet
          patchSetName: network-id
        - fromFieldPath: spec.id
          toFieldPath: spec.forProvider.tags.Name
    - name: RouteTableAssociation-1
      base:
        apiVersion: ec2.aws.upbound.io/v1beta1
        kind: RouteTableAssociation
        spec:
          forProvider:
            region: eu-central-1
            destinationCidrBlock: 0.0.0.0/0
            routeTableIdSelector:
              matchControllerRef: true
            subnetIdSelector:
              matchControllerRef: true
              matchLabels:
                zone: eu-central-1a
                access: public
      patches:
        - type: PatchSet
          patchSetName: providerConfigAws
        - type: PatchSet
          patchSetName: network-id
        - fromFieldPath: spec.id
          toFieldPath: spec.forProvider.tags.Name
    - name: RouteTableAssociation-2
      base:
        apiVersion: ec2.aws.upbound.io/v1beta1
        kind: RouteTableAssociation
        spec:
          forProvider:
            region: eu-central-1
            destinationCidrBlock: 0.0.0.0/0
            routeTableIdSelector:
              matchControllerRef: true
            subnetIdSelector:
              matchControllerRef: true
              matchLabels:
                zone: eu-central-1b
                access: public
      patches:
        - type: PatchSet
          patchSetName: providerConfigAws
        - type: PatchSet
          patchSetName: network-id
        - fromFieldPath: spec.id
          toFieldPath: spec.forProvider.tags.Name
    - name: RouteTableAssociation-3
      base:
        apiVersion: ec2.aws.upbound.io/v1beta1
        kind: RouteTableAssociation
        spec:
          forProvider:
            region: eu-central-1
            destinationCidrBlock: 0.0.0.0/0
            routeTableIdSelector:
              matchControllerRef: true
            subnetIdSelector:
              matchControllerRef: true
              matchLabels:
                zone: eu-central-1a
                access: private
      patches:
        - type: PatchSet
          patchSetName: providerConfigAws
        - type: PatchSet
          patchSetName: network-id
        - fromFieldPath: spec.id
          toFieldPath: spec.forProvider.tags.Name
    - name: RouteTableAssociation-4
      base:
        apiVersion: ec2.aws.upbound.io/v1beta1
        kind: RouteTableAssociation
        spec:
          forProvider:
            region: eu-central-1
            destinationCidrBlock: 0.0.0.0/0
            routeTableIdSelector:
              matchControllerRef: true
            subnetIdSelector:
              matchControllerRef: true
              matchLabels:
                zone: eu-central-1b
                access: private
      patches:
        - type: PatchSet
          patchSetName: providerConfigAws
        - type: PatchSet
          patchSetName: network-id
        - fromFieldPath: spec.id
          toFieldPath: spec.forProvider.tags.Name
    - name: MainRouteTableAssociation
      base:
        apiVersion: ec2.aws.upbound.io/v1beta1
        kind: MainRouteTableAssociation
        spec:
          forProvider:
            region: eu-central-1
            routeTableIdSelector:
              matchControllerRef: true
            vpcIdSelector:
              matchControllerRef: true
      patches:
        - type: PatchSet
          patchSetName: providerConfigAws
        - type: PatchSet
          patchSetName: network-id
        - fromFieldPath: spec.id
          toFieldPath: spec.forProvider.tags.Name
    - name: securityGroup
      base:
        apiVersion: ec2.aws.upbound.io/v1beta1
        kind: SecurityGroup
        spec:
          forProvider:
            region: eu-central-1
            name: allow_db_access
            description: Allow DB inbound traffic
            tags:
              Name: allow_db_access
            vpcIdSelector:
              matchControllerRef: true
      patches:
        - type: PatchSet
          patchSetName: providerConfigAws
        - type: PatchSet
          patchSetName: network-id
        - fromFieldPath: spec.id
          toFieldPath: spec.forProvider.tags.Name
        - type: ToCompositeFieldPath
          fromFieldPath: metadata.annotations[crossplane.io/external-name]
          toFieldPath: status.securityGroupIds[0]
    - name: securityGroupRule-DBports-1
      base:
        apiVersion: ec2.aws.upbound.io/v1beta1
        kind: SecurityGroupRule
        spec:
          forProvider:
            type: ingress
            securityGroupIdSelector:
              matchControllerRef: true
            region: eu-central-1
            cidrBlocks:
              - 0.0.0.0/0
            protocol: tcp
            fromPort: 5432
            toPort: 5432
      patches:
        - type: PatchSet
          patchSetName: providerConfigAws
        - fromFieldPath: metadata.name
          toFieldPath: spec.forProvider.tags.Name
    - name: securityGroupRule-DBports-2
      base:
        apiVersion: ec2.aws.upbound.io/v1beta1
        kind: SecurityGroupRule
        spec:
          forProvider:
            type: ingress
            securityGroupIdSelector:
              matchControllerRef: true
            region: eu-central-1
            cidrBlocks:
              - 0.0.0.0/0
            protocol: tcp
            fromPort: 3306
            toPort: 3306
      patches:
        - type: PatchSet
          patchSetName: providerConfigAws
        - fromFieldPath: metadata.name
          toFieldPath: spec.forProvider.tags.Name
